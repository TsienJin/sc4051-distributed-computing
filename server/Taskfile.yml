version: "3"

tasks:

  ##################################
  ## Local Entry Points
  ##################################

  ### Start client TUI
  client:
    desc: "Run Go TUI client"
    cmds:
      - go run ./cmd/client.go --host {{.host}} --port {{.port}}
    vars:
      host: "{{.host | default `sc4051.tail44d0d9.ts.net` }}"
      port: "{{.port | default `8765` }}"

  ### Run sanity entry point
  sanity:
    desc: "Run sanity entry point"
    cmds:
      - go run ./cmd/sanity.go

  ### Testing Suite
  test:
    desc: "Run tests"
    cmds:
      - gotestsum ./internal/... --race

  test:integration:
    desc: "Run integration tests"
    cmds:
      - go clean -testcache
      - gotestsum ./tests/... --race

  ### Execute server (locally)
  start:
    desc: "Starts server (local)"
    cmds:
      - go run ./cmd/server.go

  ### Runs the server over docker (locally)
  start:docker:
    desc: "Starts the server on Docker (local)"
    cmds:
      - docker compose --file ./Dockercompose.yml --env-file ./Dockercompose.env up --build --force-recreate

  ##################################
  ## Remote Entry Points
  ##################################

  prod:
    desc: "Deploy Docker image to server"
    dotenv: ['Taskfile.env']
    cmds:
      - DOCKER_HOST=ssh://$REMOTE_USER@$REMOTE_HOST docker compose --file ./Dockercompose.yml --env-file ./Dockercompose.env up --build --force-recreate -d

  prod:w:
    desc: "Watch logs using netcat"
    dotenv: ['Taskfile.env', 'Dockercompose.env']
    cmds:
      - nc -v $REMOTE_HOST $SERVER_LOG_PORT

  prod:w:docker:
    desc: "Watch logs using Docker"
    dotenv: ['Taskfile.env']
    cmds:
      - DOCKER_HOST=ssh://$REMOTE_USER@$REMOTE_HOST docker compose --file ./Dockercompose.yml --env-file ./Dockercompose.env logs --follow
